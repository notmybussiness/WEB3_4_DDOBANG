plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ddobang'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Database
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.awaitility:awaitility:4.2.0' // 비동기 처리위한 라이브러리
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // OpenAPI (Swagger) 추가
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.1"

    // querydsl
    implementation "com.querydsl:querydsl-jpa:5.1.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // servlet-api
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    // AWS S3
    implementation 'software.amazon.awssdk:s3:2.31.19'
    
    // Monitoring & Metrics
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    
    // RabbitMQ (AMQP)
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    
    // WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
}

def querydslDir = "build/generated/querydsl"

// Q클래스가 생성될 디렉토리 지정
sourceSets {
    main {
        java {
            srcDirs += querydslDir
        }
    }
}

// Q클래스를 생성할 디렉토리 지정
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ["-Aquerydsl.sourcedir=${querydslDir}"]
}

tasks.named('test') {
    useJUnitPlatform()
}