server:
  port: 8080

spring:
  application:
    name: backend

  profiles:
    # 기본 활성 프로파일은 h2로 설정 (테스트용)
    active: h2

  config:
    import: optional:application-secret.yml
    
  # H2 데이터베이스 설정 (테스트용)
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    
  # H2 콘솔 활성화
  h2:
    console:
      enabled: true
      path: /h2-console
      
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true

  mvc:
    async:
      request-timeout: 600000  # SSE 연결 타임아웃 설정 (밀리초)

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${oauth.kakao.client-id}
            client-secret: ${oauth.kakao.client-secret}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - profile_image
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

# swagger
springdoc:
  swagger-ui:
    path: /swagger-ui
    display-request-duration: true
  default-produces-media-type: application/json
  paths-to-match: /**

# Monitoring & Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active}

  # Redis 설정
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # RabbitMQ 설정
  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin123
    virtual-host: /
    connection-timeout: 10000
    publisher-confirm-type: correlated
    publisher-returns: true
    template:
      mandatory: true
      retry:
        enabled: true
        initial-interval: 1000
        max-attempts: 3
        multiplier: 2
    listener:
      simple:
        acknowledge-mode: manual
        prefetch: 10
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          multiplier: 2

# Custom settings
custom:
  sse:
    timeout: 600000  # SSE 타임아웃 설정 (밀리초, 10분)
  cache:
    ttl:
      regions: 3600    # 지역 데이터 캐시 TTL (1시간)
      themes: 1800     # 테마 데이터 캐시 TTL (30분)
      parties: 300     # 파티 목록 캐시 TTL (5분)
  rabbitmq:
    queues:
      alarm: "alarm.queue"                    # 알림 메인 큐
      alarm-retry: "alarm.queue.retry"        # 재시도 큐
      alarm-dlq: "alarm.queue.dlq"           # Dead Letter Queue
    exchanges:
      alarm: "alarm.exchange"                 # 알림 토픽 익스체인지
    routing-keys:
      alarm: "alarm.message"                  # 알림 라우팅 키
      alarm-retry: "alarm.retry"              # 재시도 라우팅 키
