# Docker 환경 설정
# JWT 설정
jwt:
  secret: ddobang-super-secret-key-for-development-only-change-in-production
  signup-token-expiration: 1800000      # 30분 (밀리초)
  access-token-expiration: 900000       # 15분 (밀리초)  
  refresh-token-expiration: 604800000   # 7일 (밀리초)

# OAuth2 설정 (실제 카카오 키)
oauth:
  kakao:
    client-id: 8f3d8cb62271be68c50e13d914c7c0e2
    client-secret: bD2qEoDEr17eobh0yGyHpsNwbgy8ADpP

# AWS S3 설정 (Docker 환경용 - 테스트용 더미값)
cloud:
  aws:
    credentials:
      access-key: dummy-access-key-for-docker-test
      secret-key: dummy-secret-key-for-docker-test
    s3:
      bucket: dummy-bucket-for-docker-test
    region:
      static: ap-northeast-2

spring:
  datasource:
    url: jdbc:mysql://mysql:3306/ddobang?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ddobang
    password: password
    driver-class-name: com.mysql.cj.jdbc.Driver
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        default_batch_fetch_size: 100
        jdbc:
          batch_size: 20
          
  data:
    redis:
      host: redis
      port: 6379
      timeout: 2000
      
  # 로깅 설정
  logging:
    level:
      com.ddobang.backend: INFO
      org.springframework.security: INFO
      org.hibernate.SQL: WARN
      org.hibernate.type.descriptor.sql.BasicBinder: WARN
    pattern:
      console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file:
      name: /app/logs/application.log
      
# CORS 설정 (Docker 환경)
custom:
  cors:
    allowed-origins:
      - http://localhost:3000
      - http://frontend:3000
      - http://localhost:80
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers:
      - "*"
    allow-credentials: true
    max-age: 3600