services:
  # Spring Boot Backend
  backend:
    build: 
      context: ./DDOBANG_BE
      dockerfile: Dockerfile
    container_name: ddobang-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xms512m -Xmx1024m -XX:+UseG1GC
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus - 메트릭 수집
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus-backend.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time=7d'
    networks:
      - monitoring
    depends_on:
      backend:
        condition: service_healthy

  # Grafana - 시각화 대시보드
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring
    depends_on:
      - prometheus

  # K6 부하 테스트
  k6:
    image: grafana/k6:latest
    container_name: k6-loadtest
    volumes:
      - ./performance-test:/scripts
    command: run /scripts/load-test.js
    networks:
      - monitoring
    depends_on:
      backend:
        condition: service_healthy
    profiles:
      - test

  # InfluxDB for K6 metrics (선택적)
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_HTTP_MAX_BODY_SIZE=0
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - monitoring
    profiles:
      - metrics

volumes:
  prometheus_data:
  grafana_data:
  influxdb_data:

networks:
  monitoring:
    driver: bridge